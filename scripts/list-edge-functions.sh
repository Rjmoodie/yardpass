#!/bin/bash

# Script to list all edge functions and their naming conventions
# This helps identify naming mismatches between frontend calls and actual function names

echo "üîç YARDPASS EDGE FUNCTIONS ANALYSIS"
echo "=================================="
echo ""

# Get all edge function directories
FUNCTIONS_DIR="supabase/functions"
echo "üìÅ Edge Functions Directory: $FUNCTIONS_DIR"
echo ""

# List all edge functions
echo "üìã ALL EDGE FUNCTIONS:"
echo "----------------------"
for func_dir in "$FUNCTIONS_DIR"/*/; do
    if [ -d "$func_dir" ]; then
        func_name=$(basename "$func_dir")
        echo "‚úÖ $func_name"
    fi
done

echo ""
echo "üîó FRONTEND API CALLS vs EDGE FUNCTIONS:"
echo "----------------------------------------"

# Common frontend API calls that might not match edge function names
declare -A api_calls=(
    ["get_user_tickets"]="tickets-my"
    ["get_user_tickets"]="tickets-my"
    ["events_with_details"]="get-events"
    ["checkout-session"]="checkout-session"
    ["purchase-tickets"]="purchase-tickets"
    ["create-event"]="create-event"
    ["update-event"]="update-event"
    ["get-events"]="get-events"
    ["enhanced-search"]="enhanced-search"
    ["social-feed"]="social-feed"
    ["discover-feed"]="discover-feed"
    ["smart-recommendations"]="smart-recommendations"
    ["event-analytics"]="event-analytics"
    ["stripe-webhook"]="stripe-webhook"
)

echo "Frontend Call ‚Üí Edge Function"
echo "----------------------------"
for api_call in "${!api_calls[@]}"; do
    edge_function="${api_calls[$api_call]}"
    if [ -d "$FUNCTIONS_DIR/$edge_function" ]; then
        echo "‚úÖ $api_call ‚Üí $edge_function"
    else
        echo "‚ùå $api_call ‚Üí $edge_function (MISSING)"
    fi
done

echo ""
echo "üö® POTENTIAL ISSUES IDENTIFIED:"
echo "-------------------------------"

# Check for common naming mismatches
if [ -d "$FUNCTIONS_DIR/tickets-my" ]; then
    echo "‚ö†Ô∏è  Frontend calls 'get_user_tickets' but edge function is 'tickets-my'"
    echo "   ‚Üí Consider renaming edge function to 'get-user-tickets' or update frontend calls"
fi

if [ -d "$FUNCTIONS_DIR/get-events" ]; then
    echo "‚ö†Ô∏è  Frontend calls 'events_with_details' but edge function is 'get-events'"
    echo "   ‚Üí Consider creating 'events-with-details' function or update frontend calls"
fi

echo ""
echo "üìä SUMMARY:"
echo "-----------"
total_functions=$(find "$FUNCTIONS_DIR" -maxdepth 1 -type d | wc -l)
total_functions=$((total_functions - 1))  # Subtract 1 for the functions directory itself
echo "Total Edge Functions: $total_functions"

echo ""
echo "üéØ RECOMMENDATIONS:"
echo "------------------"
echo "1. Standardize naming convention to kebab-case (e.g., 'get-user-tickets')"
echo "2. Ensure frontend API calls match edge function names exactly"
echo "3. Update any hardcoded function names in frontend code"
echo "4. Consider creating missing functions for common API calls"
echo ""

echo "üîß TO DEPLOY ALL FUNCTIONS:"
echo "---------------------------"
echo "supabase functions deploy --project-ref YOUR_PROJECT_REF"
echo ""

echo "üîç TO CHECK FUNCTION STATUS:"
echo "----------------------------"
echo "supabase functions list --project-ref YOUR_PROJECT_REF"
